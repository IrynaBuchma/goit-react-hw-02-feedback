{"ast":null,"code":"var _jsxFileName = \"D:\\\\GoIT\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\App.jsx\";\nimport { Component } from \"react\";\nimport Statistics from 'components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.addStatisticValue = prop => {\n      this.setState(prevState => ({\n        [prop]: prevState[prop] + 1\n      }));\n    };\n\n    this.countTotalFeedback = () => {\n      return Object.values(this.state).reduce((acc, prop) => acc + prop, 0);\n    };\n  }\n\n  countPositiveFeedbackPercentage() {\n    const {\n      good\n    } = this.state;\n    return Math.round(good * 100 / this.countTotalFeedback()) || 0;\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n        color: '#010101'\n      },\n      children: /*#__PURE__*/_jsxDEV(Statistics, {\n        good: good,\n        neutral: neutral,\n        bad: bad,\n        total: total,\n        positivePercentage: positivePercentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["D:/GoIT/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["Component","Statistics","App","state","good","neutral","bad","addStatisticValue","prop","setState","prevState","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","Math","round","render","height","display","justifyContent","alignItems","fontSize","color","total","positivePercentage"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,eAAe,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAEzCG,KAFyC,GAEjC;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KAFiC;;AAAA,SAQzCC,iBARyC,GAQrBC,IAAI,IAAI;AAC1B,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1B,SAACF,IAAD,GAAQE,SAAS,CAACF,IAAD,CAAT,GAAkB;AADA,OAAL,CAAvB;AAGD,KAZwC;;AAAA,SAczCG,kBAdyC,GAcpB,MAAM;AACzB,aAAOC,MAAM,CAACC,MAAP,CAAc,KAAKV,KAAnB,EAA0BW,MAA1B,CAAiC,CAACC,GAAD,EAAMP,IAAN,KAAeO,GAAG,GAAGP,IAAtD,EAA4D,CAA5D,CAAP;AACD,KAhBwC;AAAA;;AAkBzCQ,EAAAA,+BAA+B,GAAG;AAChC,UAAK;AAAEZ,MAAAA;AAAF,QAAW,KAAKD,KAArB;AACA,WAAOc,IAAI,CAACC,KAAL,CAAYd,IAAI,GAAG,GAAR,GAAe,KAAKO,kBAAL,EAA1B,KAAwD,CAA/D;AACD;;AAGDQ,EAAAA,MAAM,GAAI;AAER,UAAM;AAAEf,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAwB,KAAKH,KAAnC;AAEA,wBACE;AACE,MAAA,KAAK,EAAE;AACLiB,QAAAA,MAAM,EAAE,OADH;AAELC,QAAAA,OAAO,EAAE,MAFJ;AAGLC,QAAAA,cAAc,EAAE,QAHX;AAILC,QAAAA,UAAU,EAAE,QAJP;AAKLC,QAAAA,QAAQ,EAAE,EALL;AAMLC,QAAAA,KAAK,EAAE;AANF,OADT;AAAA,6BAUE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAErB,IAAlB;AAAwB,QAAA,OAAO,EAAEC,OAAjC;AAA0C,QAAA,GAAG,EAAEC,GAA/C;AAAoD,QAAA,KAAK,EAAEoB,KAA3D;AAAkE,QAAA,kBAAkB,EAAEC;AAAtF;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AA1CwC;AA2C1C","sourcesContent":["import {Component} from \"react\";\r\nimport Statistics from 'components'\r\n\r\nexport default class App extends Component {\r\n  \r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  }\r\n\r\n  addStatisticValue = prop => {\r\n    this.setState(prevState => ({\r\n      [prop]: prevState[prop] + 1\r\n    }))\r\n  }\r\n\r\n  countTotalFeedback = () => {\r\n    return Object.values(this.state).reduce((acc, prop) => acc + prop, 0 ); \r\n  }\r\n\r\n  countPositiveFeedbackPercentage() {\r\n    const{ good } = this.state;\r\n    return Math.round((good * 100) / this.countTotalFeedback()) || 0;\r\n  }\r\n  \r\n\r\n  render () {\r\n\r\n    const { good, neutral, bad} = this.state;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          height: '100vh',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          fontSize: 40,\r\n          color: '#010101'\r\n        }}\r\n      >\r\n        <Statistics good={good} neutral={neutral} bad={bad} total={total} positivePercentage={positivePercentage} />\r\n      </div>   \r\n    );\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}